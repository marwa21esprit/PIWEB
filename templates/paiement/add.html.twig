{% extends '/front/gestion.html.twig' %}

{% block stylesheets %}

    <style>
        .bill-card {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            text-align: center; /* Center the bill */
        }

        .bill-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #e5e5e5; /* Change to gray */
            color: #333; /* Change text color */
            padding: 10px 20px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .bill-header-title {
            font-size: 24px;
        }

        .bill-header-total {
            font-size: 18px;
        }


        .bill-content-item:nth-child(odd) {
            background-color: #f0f0f0; /* Alternate row background color */
        }

        .bill-content-item:last-child {
            border-bottom: 1px solid #ccc; /* Border between last content item and footer */
        }

        .bill-content-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
        }

        .bill-content-left {
            display: flex;
            align-items: center;
        }

        .bill-event-image {
            width: 70px;
            height: 70px;
            border-radius: 10px; /* Rounded corners for image */
            margin-right: 10px; /* Adjusted margin */
        }

        .bill-event-details {
            text-align: left; /* Align text to the left */
        }

        .bill-event-name {
            font-size: 20px;
            margin-bottom: 3px; /* Adjusted margin */
        }

        .bill-event-time {
            font-size: 16px;
            color: #888;
            margin-bottom: 0; /* Adjusted margin */
        }

        .bill-content-right {
            flex-shrink: 0;
        }

        .bill-event-price {
            font-size: 18px;
            text-align: right; /* Align text to the right */
        }


        .bill-ticket-number {
            font-size: 20px;
        }

        .bill-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .bill-footer-total,
        .bill-footer-amount {
            font-size: 20px;
        }

.form-error-message {
            color: red;
        }
        
       .alert.alert-dan {
    background-color: transparent;
    border: none;
    color: red;
    font-size: small;
    font-weight: bold;
}


.ticket-controls {
    display: flex;
    align-items: center;
}

.button-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-left: 10px; /* Adjust margin for spacing */
}


.ticket-control-btn {
    background-color: transparent;
    color: #333;
    border: none;
    border-radius: 5px;
    width: 30px;
    height: 30px;
    font-size: 15px;
    cursor: pointer;
    transition: color 0.3s ease;
    margin: 0; /* Remove margin between buttons */
    display: block; /* Display buttons as block elements */
    text-align: center; /* Center the content horizontally */
}

/* Additional styles to hide the button outline */
.ticket-control-btn:focus {
    outline: none;
}

.ticket-control-btn::before {
    content: '';
}

.ticket-control-btn.increment::before {
    content: '▲'; /* Arrow pointing up */
    display: block; /* Display plus sign as block element */
}

.ticket-control-btn.decrement::before {
    content: '▼'; /* Arrow pointing down */
    display: block; /* Display minus sign as block element */
}



    </style>
{% endblock %}

{% block body %}
    <div class="container-xxl py-5">
        <div class="row justify-content-center">
            <div class="col-lg-6">
                <div class="bill-card">
                    <div class="bill-header">
                        <h3 class="bill-header-title">Billet</h3>
                        <p class="bill-header-total">Total</p>
                    </div>
                    <div class="bill-content">
                        <div class="bill-content-item">
                            <div class="bill-content-left">
                                <img src="{{ asset('uploads/' ~ reservation.Imagesrc) }}" alt="Event Image" class="bill-event-image">
                                <div class="bill-event-details">
                                    <h4 class="bill-event-name">{{ reservation.namee }}</h4>
                                    <p class="bill-event-time">{{ reservation.IdEvent.dateevent|date }}</p>
                                </div>
                            </div>
                            <div class="bill-content-right">
                                <p class="bill-event-price">x1</p>
                                <p class="bill-event-price">{{ reservation.Eventprice }} TND</p>
                            </div>
                        </div>
                        <div class="bill-content-item">
    <div class="bill-content-right">
        <p class="bill-ticket-right">Nombre de tickets</p>
    </div>    
    <div class="bill-content-left">
        <div class="ticket-controls">
            <p class="bill-ticket-number" id="ticketNumber">{{ reservation.NbPlaces }}</p>
            <div class="button-container">
                <button type="button" class="ticket-control-btn increment" id="incrementBtn"></button>
                            <button type="button" class="ticket-control-btn decrement" id="decrementBtn"></button>
</div>
        </div>
    </div>
</div>
                    </div>
                    <div class="bill-footer">
                        <p class="bill-footer-total">Montant Total:</p>
                        <div id="totalAmount" class="bill-footer-amount">{{ reservation.NbPlaces * reservation.Eventprice }} TND</div>
                    </div>
                                 <button type="button" class="btn btn-sm btn-danger delete-btn" data-id="{{ reservation.id }}"><i class="la la-trash-o"></i></button>

                </div>
            </div>
            <div class="col-lg-6">
                <div class="bill-card">
                    <div class="bill-header">
                        <h3 class="bill-header-title">Payment Details</h3>
                    </div>
                    <form id="payment-form" method="post" novalidate>
                        {{ form_start(f) }}
                         {% if form_errors(f) %}
                            <div class="alert alert-dan">
                                {% for error in form_errors(f) %}
                                    <p class="form-error-message">{{ error.message }}</p>
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="card">
                            <div class="card-header p-0">
                                <h2 class="mb-0">
                                    <button class="btn btn-light btn-block text-left p-3 rounded-0" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <span>Credit card</span>
                                            <div class="icons">
                                                <img src="https://img.icons8.com/color/48/000000/mastercard-logo.png" width="30">
                                                <img src="https://img.icons8.com/color/48/000000/visa.png" width="30">
                                                <img src="https://img.icons8.com/color/48/000000/amex.png" width="30">
                                                <img src="https://img.icons8.com/color/48/000000/discover.png" width="30">
                                            </div>
                                        </div>
                                    </button>
                                </h2>
                            </div>
                            <div id="collapseOne" class="collapse show" aria-labelledby="headingOne">
                                <div class="card-body payment-card-body">
                              <div class="form-group">
                                {{ form_label(f.cardNumber, 'Card Number', {'label_attr': {'class': 'form-label fw-medium'}}) }}
                                {{ form_widget(f.cardNumber, {'attr': {'class': 'form-control', 'placeholder': '1234 5678 9012 3456'}}) }}
                                {% if f.cardNumber.vars.errors|length > 0 %}
                            <div class="alert alert-dan">
                                {% for error in f.cardNumber.vars.errors %}
                                    <span>{{ error.message }}</span><br>
                                {% endfor %}
                            </div>
                        {% endif %}</div>

                                    <div class="row mt-3 mb-3">
                                        <div class="col-md-6">
                                            {{ form_label(f.expireDate, 'Expiration Date (MM/YYYY)', {'label_attr': {'class': 'form-label fw-medium'}}) }}
                                            {{ form_widget(f.expireDate, {'attr': {'class': 'form-control', 'placeholder': 'MM/YYYY'}}) }}
                                           {% if f.expireDate.vars.errors|length > 0 %}
                            <div class="alert alert-dan">
                                {% for error in f.expireDate.vars.errors %}
                                    <span>{{ error.message }}</span><br>
                                {% endfor %}
                            </div>
                        {% endif %}                                       
                         </div>
                                        <div class="col-md-6">
                                            {{ form_label(f.cvv, 'CVV', {'label_attr': {'class': 'form-label fw-medium'}}) }}
                                            {{ form_widget(f.cvv, {'attr': {'class': 'form-control', 'placeholder': 'CVV'}}) }}
                                          {% if f.cvv.vars.errors|length > 0 %}
                            <div class="alert alert-dan">
                                {% for error in f.cvv.vars.errors %}
                                    <span>{{ error.message }}</span><br>
                                {% endfor %}
                            </div>
                        {% endif %}
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        {{ form_label(f.name, 'Cardholder Name', {'label_attr': {'class': 'form-label fw-medium'}}) }}
                                        {{ form_widget(f.name, {'attr': {'class': 'form-control', 'placeholder': 'John Doe'}}) }}
                                        {% if f.name.vars.errors|length > 0 %}
                            <div class="alert alert-dan">
                                {% for error in f.name.vars.errors %}
                                    <span>{{ error.message }}</span><br>
                                {% endfor %}
                            </div>
                        {% endif %}
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-lg btn-block mt-3 mb-3">Pay Now</button>
                                </div>
                            </div>
                        </div>
                        {{ form_end(f) }}
                    </form>
                </div>
            </div>

        </div>
    </div>


   <script>
  document.addEventListener("DOMContentLoaded", function() {
    const deleteButtons = document.querySelectorAll('.delete-btn');

    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const id = this.getAttribute('data-id');
            const confirmation = confirm('Are you sure you want to delete this reservation?');

            if (confirmation) {
                deleteReservation(id);
            }
        });
    });

    function deleteReservation(id) {
        fetch(`/reservation/delete/${id}`, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.ok) {
                alert('Reservation deleted successfully');
                window.location.href = "{{ path('app_event') }}"; // Redirect to event page
            } else {
                alert('Failed to delete reservation');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while deleting the reservation');
        });
    }
});
    // Get elements
    var decrementBtn = document.getElementById('decrementBtn');
    var incrementBtn = document.getElementById('incrementBtn');
    var ticketNumberElement = document.getElementById('ticketNumber');
    var ticketNumber = parseInt(ticketNumberElement.textContent); // Parse the initial value
    var reservationId = {{ reservation.id }}; // Get the reservation ID from Twig
    var eventPrice = {{ reservation.Eventprice }}; // Get the event price from Twig

    // Function to update total amount
    function updateTotalAmount() {
        var totalAmount = ticketNumber * eventPrice;
        document.getElementById('totalAmount').textContent = totalAmount + ' TND';
    }

    // Function to make AJAX request to update number of places in the database
    function updateNbPlaces(newNbPlaces) {
        console.log("Updating number of places to: " + newNbPlaces); // Log the new number of places

        fetch('/update-nb-places', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                reservationId: reservationId,
                newNbPlaces: newNbPlaces, // Send the new number of places
            }),
        })
        .then(response => response.json())
        .then(data => {
            // Update the total amount displayed based on the response
            console.log("Updated total amount: " + data.updatedTotalAmount); // Log the updated total amount
            document.getElementById('totalAmount').textContent = data.updatedTotalAmount + ' TND';
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Decrement function
    decrementBtn.addEventListener('click', function() {
        if (ticketNumber > 1) { // Ensure ticket number doesn't go below 1
            ticketNumber--;
            ticketNumberElement.textContent = ticketNumber;
            updateTotalAmount(); // Update total amount

            // Log a message to check if decrement event listener is triggered
            console.log("Decrement button clicked. New ticket number: " + ticketNumber);

            // Make AJAX request to update number of places in the database
            updateNbPlaces(ticketNumber);
        }
    });

    // Increment function
    incrementBtn.addEventListener('click', function() {
        ticketNumber++;
        ticketNumberElement.textContent = ticketNumber;
        updateTotalAmount(); // Update total amount

        // Log a message to check if increment event listener is triggered
        console.log("Increment button clicked. New ticket number: " + ticketNumber);

        // Make AJAX request to update number of places in the database
        updateNbPlaces(ticketNumber);
    });

    // Initial update of total amount
    updateTotalAmount();
</script>

<script>
    var stripe = Stripe(' pk_test_51Oo7aQLjJljsz2MFEbg6cYMpsTqNRdyo57m0Gpp8uwKoYe9a7bSvoFYgxiRRbaHtquozdxyNLEoaYZGdBArUeMPp00ppq7ZifZ }}');
    var elements = stripe.elements();
    var card = elements.create('card');
    card.mount('#card-element');
    
    var form = document.getElementById('payment-form');
    
    form.addEventListener('submit', function(event) {
        event.preventDefault();
    
        stripe.createPaymentMethod({
            type: 'card',
            card: card,
            billing_details: {
                name: form.name.value
            }
        }).then(function(result) {
            if (result.error) {
                console.log(result.error.message);
            } else {
                stripeTokenHandler(result.paymentMethod);
            }
        });
    });
    
    function stripeTokenHandler(paymentMethod) {
        var hiddenInputs = [
            { name: 'payment_method_id', value: paymentMethod.id },
            { name: 'amount', value: {{ reservation.NbPlaces * reservation.Eventprice }} }
            // Add other necessary fields here
        ];
    
        hiddenInputs.forEach(function(input) {
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', input.name);
            hiddenInput.setAttribute('value', input.value);
            form.appendChild(hiddenInput);
        });
    
        // Submit the form
        form.submit();
    }
</script>



{% endblock %}

